"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getApolloClient = void 0;
const client_1 = require("@apollo/client");
const batch_http_1 = require("@apollo/client/link/batch-http");
const context_1 = require("@apollo/client/link/context");
const deepmerge_1 = __importDefault(require("deepmerge"));
const utils_1 = require("../utils");
const auth_1 = require("../auth");
const WP_URL = utils_1.trimTrailingSlash(process.env.NEXT_PUBLIC_WORDPRESS_URL || process.env.WORDPRESS_URL);
if (!WP_URL) {
    console.warn('Set NEXT_PUBLIC_WORDPRESS_URL to your WordPress site URL and install the WPGraphQL plugin to see your own content.');
}
function createApolloClient(options) {
    const authLink = context_1.setContext((_, { headers }) => {
        const token = auth_1.getAccessToken(options);
        if (!token) {
            return {};
        }
        return {
            headers: Object.assign(Object.assign({}, headers), { authorization: token ? `Bearer ${token}` : '' }),
        };
    });
    return new client_1.ApolloClient({
        ssrMode: utils_1.isServerSide(),
        link: WP_URL
            ? authLink.concat(new batch_http_1.BatchHttpLink({
                uri: `${WP_URL}/graphql`,
            }))
            : undefined,
        cache: new client_1.InMemoryCache(),
    });
}
function getApolloClient(context, initialState = null) {
    var _a;
    let localApolloClient = (_a = context) === null || _a === void 0 ? void 0 : _a.__apollo_client;
    if (!localApolloClient) {
        localApolloClient = createApolloClient({
            cookies: utils_1.getCookiesFromContext(context),
        });
    }
    if (context) {
        context.__apollo_client = localApolloClient;
    }
    if (initialState) {
        const existingCache = localApolloClient.extract();
        const overwriteMerge = (target, source, options) => source;
        const data = deepmerge_1.default(initialState !== null && initialState !== void 0 ? initialState : {}, existingCache, {
            arrayMerge: overwriteMerge,
        });
        localApolloClient.cache.restore(data);
    }
    if (utils_1.isServerSide())
        return localApolloClient;
    return localApolloClient;
}
exports.getApolloClient = getApolloClient;
