import { ApolloClient, ApolloQueryResult, NormalizedCacheObject, QueryResult } from '@apollo/client';
import { UriInfo } from '../types';
import { ListPostOptions, ContentNodeOptions } from './queries';
export declare function getPosts(client: ApolloClient<NormalizedCacheObject>, options?: ListPostOptions): Promise<WPGraphQL.RootQuery['posts']>;
export declare function composeContentNodeOptions(options?: ContentNodeOptions): ContentNodeOptions<WPGraphQL.RootQueryContentNodeArgs>;
export declare function parseContentNodeQuery(result: ApolloQueryResult<WPGraphQL.GetContentNodeQuery> | QueryResult<WPGraphQL.GetContentNodeQuery>, options: ContentNodeOptions): WPGraphQL.Post | WPGraphQL.Page | undefined;
export declare function getContentNode(client: ApolloClient<NormalizedCacheObject>, options?: ContentNodeOptions): Promise<WPGraphQL.RootQuery['post'] | WPGraphQL.RootQuery['page'] | undefined>;
export declare function getGeneralSettings(client: ApolloClient<NormalizedCacheObject>): Promise<WPGraphQL.GeneralSettingsQuery['generalSettings']>;
export declare function composeUrlPath(uriPath?: string): {
    urlPath: string;
    isPreview: boolean;
} | undefined;
export declare function parseUriInfoQuery(response: ApolloQueryResult<WPGraphQL.GetUriInfoQuery> | QueryResult<WPGraphQL.GetUriInfoQuery>, uriPath: string, isPreview?: boolean): UriInfo;
export declare function getUriInfo(client: ApolloClient<NormalizedCacheObject>, uriPath?: string): Promise<UriInfo | undefined>;
