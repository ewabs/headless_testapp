"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureAuthorization = exports.authorize = void 0;
const utils_1 = require("../utils");
const cookie_1 = require("./cookie");
const WP_URL = utils_1.trimTrailingSlash(process.env.NEXT_PUBLIC_WORDPRESS_URL || process.env.WORDPRESS_URL);
const AUTH_URL = utils_1.trimTrailingSlash(process.env.NEXT_PUBLIC_AUTHORIZATION_URL ||
    process.env.AUTHORIZATION_URL ||
    '/api/auth/wpe-headless');
const API_CLIENT_SECRET = process.env.WP_HEADLESS_SECRET;
if (!API_CLIENT_SECRET && utils_1.isServerSide()) {
    console.warn('The WP_HEADLESS_SECRET environment variable is not set. Install the WP Engine Headless plugin and set WP_HEADLESS_SECRET to the “Secret Key” from Settings → Headless to enable post previews.');
}
async function authorize(code) {
    const response = await fetch(`${WP_URL}/wp-json/wpac/v1/authorize`, {
        headers: {
            'Content-Type': 'application/json',
            'x-wpe-headless-secret': API_CLIENT_SECRET,
        },
        method: 'POST',
        body: JSON.stringify({
            code,
        }),
    });
    const result = (await response.json());
    if (!response.ok) {
        throw {
            error: result,
            status: response.status,
        };
    }
    return result;
}
exports.authorize = authorize;
function ensureAuthorization(redirectUri, options) {
    const accessToken = cookie_1.getAccessToken(options);
    if (!WP_URL) {
        return undefined;
    }
    if (!!accessToken && accessToken.length > 0) {
        return accessToken;
    }
    const parsedUrl = utils_1.parseUrl(redirectUri);
    if (!parsedUrl) {
        throw new Error('Invalid redirectUri for authorization');
    }
    const { baseUrl } = parsedUrl;
    return {
        redirect: `${WP_URL}/generate?redirect_uri=${encodeURIComponent(`${baseUrl}/${utils_1.trimLeadingSlash(AUTH_URL)}?redirect_uri=${encodeURIComponent(redirectUri)}`)}`,
    };
}
exports.ensureAuthorization = ensureAuthorization;
